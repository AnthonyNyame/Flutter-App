name: Android CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  flutter_version: "3.0.3"
  java_version: "12.x"

  # run jobs to test and build the android and ios app
jobs:
  # setup dependencies on flutter
  setup:
    name: Get flutter dependencies
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
        include:
          - os: ubuntu-latest
            flutter_path: /opt/hostedtoolcache/flutter
          - os: macos-latest
            flutter_path: /Users/runner/hostedtoolcache/flutter
      fail-fast: false

    steps:
      - uses: actions/checkout@v2
      - name: Cache Flutter dependencies
        uses: actions/cache@v2
        with:
          path: ${{ matrix.flutter_path }}
          key: ${{ runner.os }}-flutter-install-cache-${{ env.flutter_version }}
      - uses: subosito/flutter-action@v1
        with:
          channel: 'stable'
          flutter_version: ${{ env.flutter_version }}
      - name: Install Flutter dependencies
        run: flutter pub get
      - name: Lint
        run: flutter format --dry-run . --set-exit-if-changed

  Code_quality:
    # name: Run flutter test and analyze
    # runs-on: ${{ matrix.os }}
    # needs: setup

    # strategy:
    #   matrix:
    #     os: [ubuntu-latest, macos-latest]
    #     include:
    #       - os: ubuntu-latest
    #         flutter_path: /opt/hostedtoolcache/flutter
    #       - os: macos-latest
    #         flutter_path: /Users/runner/hostedtoolcache/flutter
    #   fail-fast: false

    # steps:
    #   - uses: actions/checkout@v2
    #   - name: Cache Flutter
    #     id: cache-flutter
    #     uses: actions/cache@v2
    #     with:
    #       path: ${{ matrix.flutter_path }}
    #       key: ${{ runner.os }}-flutter-install-cache-${{ env.flutter_version }}
    #   - uses: subosito/flutter-action@v1
    #     with:
    #       channel: 'stable'
    #       flutter_version: ${{ env.flutter_version }}
    #   - name: Analyze and Test
    #     run: |
    #       ./tool/ci.sh
    #   - name: Upload coverage to Codecov
    #     uses: codecov/codecov-action@v1
    #     with:
    #       token: ${{ secrets.CODECOV_TOKEN }}
    #       file: coverage/lcov.info

  # run linting and unit test
  flutter_test:
    name: Run flutter test and analyze
    runs-on: ${{ matrix.os }}
    needs: setup

    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
        include:
          - os: ubuntu-latest
            flutter_path: /opt/hostedtoolcache/flutter
          - os: macos-latest
            flutter_path: /Users/runner/hostedtoolcache/flutter
      fail-fast: false

    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-java@v1
        with: 
          java-version: ${{ env.java_version }}
      - name: Cache Flutter
        id: cache-flutter
        uses: actions/cache@v2
        with:
          path: ${{ matrix.flutter_path }}
          key: ${{ runner.os }}-flutter-install-cache-${{ env.flutter_version }}
      - uses: subosito/flutter-action@v1
        with:
          channel: 'stable'
          flutter_version: ${{ env.flutter_version }}
      - name: Install dependencies
        run: flutter pub get
      - name: Lint
        run: flutter analyze
      - name: Test
        run: flutter test

  # build android app
  build_appbundle:
    name: Build Flutter (Android)
    runs-on: ubuntu-latest
    steps:
      - name: say hello
        run: echo "Hello World"
  
  # build ios app
  build_ios:
    name: Build flutter (iOS)
    runs-on: macos-latest
    steps:
      - name: say hello
        run: echo "Hello World"